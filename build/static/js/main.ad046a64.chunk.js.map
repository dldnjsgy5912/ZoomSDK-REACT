{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","useState","meetingNumber","setMeetingNumber","passWord","setPassWord","apiKey","leaveUrl","userName","className","htmlFor","type","id","placeholder","value","onChange","e","target","event","onClick","preventDefault","Promise","resolve","reject","signature","generateSignature","apiSecret","role","document","getElementById","style","display","init","success","console","log","join","userEmail","tk","error","startMeeting","Error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oQAKAA,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SAqGLC,MAnGf,WAAgB,IAAD,EACyBC,qBADzB,mBACRC,EADQ,KACMC,EADN,OAEiBF,qBAFjB,mBAENG,EAFM,KAEGC,EAFH,KAOTC,EAAS,yBAITC,EAAW,wBACXC,EAAW,QA0Df,OACE,qBAAKC,UAAU,MAAf,SACE,iCACE,+DACA,sBAAKA,UAAU,oBAAf,UACE,gCACE,uBAAOC,QAAQ,YAAf,4BACA,uBACIC,KAAK,OACLC,GAAG,YACHC,YAAY,iBACZC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAKb,EAAiBa,EAAEC,OAAOH,aAE/C,gCACE,uBAAOJ,QAAQ,WAAf,sBACA,uBACIC,KAAK,OACLE,YAAY,WACZC,MAAOV,EACPW,SAAW,SAAAG,GAAK,OAAIb,EAAYa,EAAMD,OAAOH,gBAGrD,wBAAQK,QAzEO,SAACH,GAEpB,OADAA,EAAEI,iBACK,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMC,EAAY/B,UAAQgC,kBAAkB,CAC1CvB,cAAeA,EACfI,OAAQ,yBACRoB,UAAW,uCACXC,KAlBG,IAoBLL,EAAQE,GASd,SAAsBA,GACpBI,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDtC,UAAQuC,KAAK,CACXzB,SAAUA,EACV0B,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZxC,UAAQ2C,KAAK,CACXZ,UAAWA,EACXtB,cAAeA,EACfM,SAAUA,EACVF,OAAQA,EACR+B,UAvCQ,GAwCRjC,SAAUA,EACVkC,GApCc,GAqCdL,QAAS,SAACA,GACRC,QAAQC,IAAIF,IAEdM,MAAO,SAACA,GACNL,QAAQC,IAAII,OAKlBA,MAAO,SAACA,GACNL,QAAQC,IAAII,MAlCXC,CAAahB,GACd,MAAOR,GACPO,EAAOkB,MAAM,qCA4Db,gCC9FOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAASC,eAAe,SAM1Ba,M","file":"static/js/main.ad046a64.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport './App.css';\nimport { ZoomMtg } from '@zoomus/websdk';\n\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.5.0/lib', '/av');\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareWebSDK();\n// loads language files, also passes any error messages to the ui\nZoomMtg.i18n.load('ko-KO');\nZoomMtg.i18n.reload('ko-KO');\n\nfunction App() {\nconst [meetingNumber,setMeetingNumber] =useState()\n  const [passWord,setPassWord] =useState()\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\n  var signatureEndpoint = '/zoom'\n  //8mVSv2AgO2MLAleEXCeaGmmJLERo4hFkVfHG\n  // This Sample App has been updated to use SDK App type credentials https://marketplace.zoom.us/docs/guides/build/sdk-app\n  var apiKey = 'A_Tn1pb3SL21Mb9yI0LIIQ'\n  // var meetingNumber = 86941255125\n\n  var role = 0\n  var leaveUrl = 'http://localhost:3000'\n  var userName = 'React'\n  var userEmail = ''\n\n  // pass in the registrant's token if your meeting or webinar requires registration. More info here:\n  // Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/meetings#join-registered\n  // Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/webinars#join-registered\n  var registrantToken = ''\n\n  const getSignature = (e) => {\n    e.preventDefault();\n    return new Promise((resolve, reject) => {\n      try {\n        const signature = ZoomMtg.generateSignature({\n          meetingNumber: meetingNumber,\n          apiKey: \"A_Tn1pb3SL21Mb9yI0LIIQ\",\n          apiSecret: 'NbereRrHoNOnh6pCNvfrmSqlNUvJ6SSd9wXe',\n          role: role,\n        });\n        resolve(signature);\n         startMeeting(signature)\n      } catch (e) {\n        reject(Error(\"generate signature rejected\"));\n      }\n    });\n  };\n\n\n  function startMeeting(signature) {\n    document.getElementById('zmmtg-root').style.display = 'block'\n\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      success: (success) => {\n        console.log(success)\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: userName,\n          apiKey: apiKey,\n          userEmail: userEmail,\n          passWord: passWord,\n          tk: registrantToken,\n          success: (success) => {\n            console.log(success)\n          },\n          error: (error) => {\n            console.log(error)\n          }\n        })\n\n      },\n      error: (error) => {\n        console.log(error)\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <h1>Zoom Meeting SDK Sample React</h1>\n        <div className=\"meeting-container\">\n          <div>\n            <label htmlFor=\"meetingid\">Meeting Number</label>\n            <input\n                type=\"text\"\n                id=\"meetingid\"\n                placeholder=\"Meeting Number\"\n                value={meetingNumber}\n                onChange={(e)=>setMeetingNumber(e.target.value)}/>\n          </div>\n          <div>\n            <label htmlFor=\"passcode\">Passcode</label>\n            <input\n                type=\"text\"\n                placeholder=\"Passcode\"\n                value={passWord}\n                onChange={(event => setPassWord(event.target.value))}/>\n          </div>\n        </div>\n        <button onClick={getSignature}>Join Meeting</button>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}